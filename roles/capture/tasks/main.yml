---

- name: install tshark
  become: yes
  apt:
    name: tshark
    state: present
    update_cache: yes
  async: 1000
  poll: 0
  register: install_tshark

- name: Make capture directory
  become: yes
  file:
    path: /etc/containerlab/captures
    state: directory

- name: Make network specific capture directory
  become: yes
  file:
    path: /etc/containerlab/captures/{{networkname}}-{{ ansible_date_time.iso8601 }}
    state: directory

- name: Copy Capture script
  become: yes
  template:
    src: capture.sh.j2
    dest: /etc/containerlab/captures/capture.sh

- name: Change file permissions Capture script
  become: yes
  file:
    path: /etc/containerlab/captures/capture.sh
    mode: '0744'

- name: Check status router async script
  become: yes
  async_status: jid={{ router_script.ansible_job_id }}
  register: job_result_router
  until: job_result_router.finished
  retries: 500

- name: Check status bridge async script
  become: yes
  async_status: jid={{ bridge_script.ansible_job_id }}
  register: job_result_bridge
  until: job_result_bridge.finished
  retries: 500  

- name: Check status server async script
  become: yes
  async_status: jid={{ server_script.ansible_job_id }}
  register: job_result_server
  until: job_result_server.finished
  retries: 500

- name: Check status client async script
  become: yes
  async_status: jid={{ client_script.ansible_job_id }}
  register: job_result_client
  until: job_result_client.finished
  retries: 500

- name: Check status install tshark
  become: yes
  async_status: jid={{ install_tshark.ansible_job_id }}
  register: job_result_tshark
  until: job_result_tshark.finished
  retries: 500

- name: Run capture script after config scripts
  become: yes
  shell: /etc/containerlab/captures/capture.sh &