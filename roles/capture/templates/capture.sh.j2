#!/bin/bash

# script for capturing network traffic on each network segment.
# capturing is done using tshark and parsed to json to integrate it with Elasticsearch

# define number of interfaces to loop through
{% set brDMZinterfaces = 3 %}
{% set brLAN1interfaces = NumberofLANclients|int + staticinterfaces_brLan1|int %}
{% set brLAN2interfaces = 2 %}
{% set routerWANeth123 = 3 %}

# tshark capture on the router-WAN internet and router-LAN1 interfaces
{% for i in range(1, routerWANeth123 +1 ) %}
{% if savefile == "json" or savefile == "both" %}
ip netns exec clab-{{networkname}}-router-WAN tshark -i eth{{i}} -T ek >> /etc/containerlab/captures/{{networkname}}-{{ ansible_date_time.iso8601 }}/router-WAN-eth123.json &
{% endif %}
{% if savefile == "pcap" or savefile == "both" %}
touch /etc/containerlab/captures/{{networkname}}-{{ ansible_date_time.iso8601 }}/router-WAN-eth{{i}}.pcap
ip netns exec clab-{{networkname}}-router-WAN tshark -F pcap -i eth{{i}} -w /etc/containerlab/captures/{{networkname}}-{{ ansible_date_time.iso8601 }}/router-WAN-eth{{i}}.pcap &
{% endif %}
{% endfor %}

# tshark capture on br-DMZ interfaces 
{% for i in range(1, brDMZinterfaces +1 ) %}
{% if savefile == "json" or savefile == "both" %}
ip netns exec clab-{{networkname}}-br-DMZ tshark -i eth{{i}} -T ek >> /etc/containerlab/captures/{{networkname}}-{{ ansible_date_time.iso8601 }}/br-DMZ.json &
{% endif %}
{% if savefile == "pcap" or savefile == "both" %}
touch /etc/containerlab/captures/{{networkname}}-{{ ansible_date_time.iso8601 }}/br-DMZ-eth{{i}}.pcap
ip netns exec clab-{{networkname}}-br-DMZ tshark -F pcap -i eth{{i}} -w /etc/containerlab/captures/{{networkname}}-{{ ansible_date_time.iso8601 }}/br-DMZ-eth{{i}}.pcap &
{% endif %}
{% endfor %}

# tshark capture on br-LAN1 interfaces 
{% for i in range(1, brLAN1interfaces +1 ) %}
{% if savefile == "json" or savefile == "both" %}
ip netns exec clab-{{networkname}}-br-LAN1 tshark -i eth{{i}} -T ek >> /etc/containerlab/captures/{{networkname}}-{{ ansible_date_time.iso8601 }}/br-LAN1.json &
{% endif %}
{% if savefile == "pcap" or savefile == "both" %}
touch /etc/containerlab/captures/{{networkname}}-{{ ansible_date_time.iso8601 }}/br-LAN1-eth{{i}}.pcap
ip netns exec clab-{{networkname}}-br-LAN1 tshark -F pcap -i eth{{i}} -w /etc/containerlab/captures/{{networkname}}-{{ ansible_date_time.iso8601 }}/br-LAN1-eth{{i}}.pcap &
{% endif %}
{% endfor %}

# tshark capture on br-LAN2 interfaces 
{% for i in range(1, brLAN2interfaces +1 ) %}
{% if savefile == "json" or savefile == "both" %}
ip netns exec clab-{{networkname}}-br-LAN2 tshark -i eth{{i}} -T ek >> /etc/containerlab/captures/{{networkname}}-{{ ansible_date_time.iso8601 }}/br-LAN2.json &
{% endif %}
{% if savefile == "pcap" or savefile == "both" %}
touch /etc/containerlab/captures/{{networkname}}-{{ ansible_date_time.iso8601 }}/br-LAN2-eth{{i}}.pcap
ip netns exec clab-{{networkname}}-br-LAN2 tshark -F pcap -i eth{{i}} -w /etc/containerlab/captures/{{networkname}}-{{ ansible_date_time.iso8601 }}/br-LAN2-eth{{i}}.pcap &
{% endif %}
{% endfor %}

{% if capturelimitMB|int != 0  %}
while true
do
    capturefoldersize=$(du "/etc/containerlab/captures/{{networkname}}-{{ ansible_date_time.iso8601 }}" | awk '{print $1;}')
    # capturefoldersize=((du "/etc/containerlab/captures/{{networkname}}-{{ ansible_date_time.iso8601 }}" | awk '{print $1;}')
    KBtoMB=1000
    capturefolderMB=$((capturefoldersize / KBtoMB))

    if [ $capturefolderMB -ge {{ capturelimitMB|int }} ]
    then
        clab destroy --topo /etc/containerlab/{{ networkname }}/network.yml
        {% if savefile == "pcap" or savefile == "both" %}
        mergecap /etc/containerlab/captures/{{networkname}}-{{ ansible_date_time.iso8601 }}/*.pcap -w /etc/containerlab/captures/{{networkname}}-{{ ansible_date_time.iso8601 }}/merged.pcap
        {% endif %}
        break
    fi
done
{% endif %}

