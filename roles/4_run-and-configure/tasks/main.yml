---

- name: Copy Router script
  become: yes
  template:
    src: Routers.sh.j2
    dest: /etc/containerlab/{{ networkname }}/Routers.sh
    mode: '0744'

- name: Copy LAN Server script
  become: yes
  template:
    src: LANservers.sh.j2
    dest: /etc/containerlab/{{ networkname }}/LANservers.sh
    mode: '0744'

- name: Copy DMZ Server script
  become: yes
  template:
    src: DMZservers.sh.j2
    dest: /etc/containerlab/{{ networkname }}/DMZservers.sh
    mode: '0744'

- name: Copy WAN Server script
  become: yes
  template:
    src: WANservers.sh.j2
    dest: /etc/containerlab/{{ networkname }}/WANservers.sh
    mode: '0744'

- name: Copy LAN Client script
  become: yes
  template:
    src: LANclients.sh.j2
    dest: /etc/containerlab/{{ networkname }}/LANclients.sh
    mode: '0744'

- name: Copy WAN Client script
  become: yes
  template:
    src: WANclients.sh.j2
    dest: /etc/containerlab/{{ networkname }}/WANclients.sh
    mode: '0744'

- name: Copy Bridge script
  become: yes
  template:
    src: Bridges.sh.j2
    dest: /etc/containerlab/{{ networkname }}/Bridges.sh
    mode: '0744'

- name: Copy Attackers script
  become: yes
  template:
    src: Attackers.sh.j2
    dest: /etc/containerlab/{{ networkname }}/Attackers.sh
    mode: '0744'


- name: Copy Cronjob script
  become: yes
  template:
    src: Cronjobs.sh.j2
    dest: /etc/containerlab/{{ networkname }}/Cronjobs.sh
    mode: '0744'

- name: Deploy topology
  become: yes
  command: clab deploy --topo /etc/containerlab/{{ networkname }}/network.yml    

### Running Scripts

- name: Run Router script
  become: yes
  shell: /etc/containerlab/{{ networkname }}/Routers.sh

- name: Run Bridge script
  become: yes
  shell: /etc/containerlab/{{ networkname }}/Bridges.sh

- name: Run WAN Server script
  become: yes
  shell: /etc/containerlab/{{ networkname }}/WANservers.sh
  ignore_errors: True
  async: 1000
  poll: 0
  register: WAN_server_script

- name: Run LAN Server script
  become: yes
  shell: /etc/containerlab/{{ networkname }}/LANservers.sh
  ignore_errors: True
  async: 1000
  poll: 0
  register: LAN_server_script

- name: Run Attackers script
  become: yes
  shell: /etc/containerlab/{{ networkname }}/Attackers.sh
  ignore_errors: True
  async: 1000
  poll: 0
  register: Attackers_script

- name: Run DMZ Server script
  become: yes
  shell: /etc/containerlab/{{ networkname }}/DMZservers.sh
  ignore_errors: True
  async: 1000
  poll: 0
  register: DMZ_server_script  

- name: Run LAN Client script
  become: yes
  shell: /etc/containerlab/{{ networkname }}/LANclients.sh
  ignore_errors: True
  async: 1000
  poll: 0
  register: LAN_client_script

- name: Check status LAN server async script
  become: yes
  async_status: jid={{ LAN_server_script.ansible_job_id }}
  register: job_result_LAN_server
  until: job_result_LAN_server.finished
  retries: 500

- name: Run WAN Client script
  become: yes
  shell: /etc/containerlab/{{ networkname }}/WANclients.sh
  ignore_errors: True
  async: 1000
  poll: 0
  register: WAN_client_script

- name: Check status LAN client async script
  become: yes
  async_status: jid={{ LAN_client_script.ansible_job_id }}
  register: job_result_LAN_client
  until: job_result_LAN_client.finished
  retries: 1000

- name: Run ALS on LAN
  become: yes
  shell: /etc/containerlab/{{ networkname }}/profiles/ALS_profiles_LAN.sh
  ignore_errors: True
  async: 1000
  poll: 0
  register: ALS_LAN_client_script

- name: Check status WAN client async script
  become: yes
  async_status: jid={{ WAN_client_script.ansible_job_id }}
  register: job_result_WAN_client
  until: job_result_WAN_client.finished
  retries: 1000

- name: Run ALS on WAN
  become: yes
  shell: /etc/containerlab/{{ networkname }}/profiles/ALS_profiles_WAN.sh
  ignore_errors: True
  async: 1000
  poll: 0
  register: ALS_WAN_client_script